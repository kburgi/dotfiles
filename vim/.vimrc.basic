"-----------------General Settings---------------

set nocompatible
set backspace=indent,eol,start
set number
set relativenumber
set wildmenu
set wildignorecase
set wildignore+=.pyc,.swp
syntax enable
filetype plugin indent on

"no error bells
set noerrorbells

"show commands as they are typed
set showcmd

"colors
set background=dark
colorscheme gruvbox
set cursorline

"default places for opening splits
set splitbelow
set splitright

"activate mouse
set mouse=a

"keywordprg, how will 'K' react (default is man)
set kp=

"Search down into subfolders
"Provides tab completion for all related tasks
set path+=**

"set leader key
let mapleader = "\<Space>"

"Always show statusline
set laststatus=2

"-----------------System Key Bindings---------------------

"set abbreviations for common typos
cnoreabbrev   Q    q
cnoreabbrev   W    w
cnoreabbrev   Wq   wq
cnoreabbrev   wQ   wq
cnoreabbrev   WQ   wq
cnoreabbrev   Qa   qa

"move between splits
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-l> <C-W>l
nnoremap <C-h> <C-W>h

"change current dir to current file pwd
nnoremap <leader>cd :cd %:p:h<CR>:pwd<CR>

"copy paste between different programs/windows/tabs
set nopaste "just in case it is activated by default
set clipboard=unnamedplus

"editor settings
set ignorecase
set smartcase
set history=1000
set autoread
set confirm
set formatoptions+=j
set noswapfile
set pastetoggle=<F7>
set mousemodel=popup_setpos
set smartindent
set expandtab
set smarttab
set tabstop=4
set shiftwidth=4
set tags=./tags;/
set hidden "hides unsaved files open in buffers instead of closing them, undo possible
set title
set ttimeoutlen=0 "timeout time for Esc to pass to normal mode -> instantaneous

"search settings
set nohlsearch          " do not highlight searched-for phrases
set incsearch           " ...but do highlight-as-I-type the search string
set gdefault            " this makes search/replace global by default"

"undo settings
set undofile                " Save undo's after file closes
set undodir=$HOME/.vim/undo " where to save undo histories
set undolevels=1000         " How many undos
set undoreload=10000        " number of lines to save for undo

"Basically you press * or # to search for the current selection
vnoremap <silent> *  : call VisualSearch('f')<CR>
vnoremap <silent> #  : call VisualSearch('b')<CR>
vnoremap <silent> gv : call VisualSearch('gv')<CR>

" Copy to system clipboard
nnoremap <leader>y "+y
vnoremap <leader>y "+y

" Paste from system clipboard
nnoremap <leader>p "+p

" Find and replace in the whole file
nnoremap <leader>fr :%s/

"folding zf to create fold, za to toggle
set nofoldenable
set foldmethod=indent
set foldlevelstart=10
set foldnestmax=10
hi Folded ctermbg=016

"new splits
nnoremap <leader>vv :vnew<CR>
nnoremap <leader>vs :new<CR>

"Recognizing latex files
let g:tex_flavor='latex'

"Filetypes
au BufNewFile,BufRead *.pri setf idlang

"Resize
nnoremap <leader><Up> :resize +10 <CR>
nnoremap <leader><Down> :resize -10 <CR>
nnoremap <leader><Right> :vertical resize +10 <CR>
nnoremap <leader><Left> :vertical resize -10 <CR>

"Man pages in vim
runtime! ftplugin/man.vim

"----------------------Language Settings----------------------

nmap <leader>lg :set keymap=greek_utf-8<CR>
nmap <leader>le :set keymap&<CR>
nmap <leader>lcg :setlocal spell spelllang=el<CR>
nmap <leader>lce :setlocal spell spelllang=en<CR>
nmap <leader>lcf :setlocal spell spelllang=fr<CR>
nmap <leader>ll  :set nospell<CR>

inoremap ;a à
inoremap ;z â
inoremap ;b ä
inoremap ;c ç
inoremap ;w ê
inoremap ;e é
inoremap ;f ë
inoremap ;r è
inoremap ;i î
inoremap ;j ï
inoremap ;o ô
inoremap ;p ö
inoremap ;q «  »<Esc>hi
inoremap ;u ù
inoremap ;y û
inoremap ;t ü

" Setup status line
function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction

set statusline=
set statusline+=%#PmenuSel#
set statusline+=%{StatuslineGit()}
set statusline+=%#LineNr#
set statusline+=\ %f
set statusline+=%m
set statusline+=%=
set statusline+=%#CursorColumn#
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=\ %p%%
set statusline+=\ %l:%c
set statusline+=
